{"version":3,"file":"http-request.js","sourceRoot":"","sources":["../../src/componentes/http-request.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAW1D,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,UAAU;IAYzC;QACI,KAAK,EAAE,CAAC;QARZ,YAAO,GAAQ;YACX,SAAS,EAAE,KAAK;YAChB,EAAE,EAAE,CAAC;YACL,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,CAAC;SACZ,CAAC;QAoBM,YAAO,GAAG,GAAG,EAAE;YACnB,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC,CAAC;QACM,gBAAW,GAAG,GAAG,EAAE;YAEvB,MAAM,SAAS,GAAG,KAAK,CAAC,4CAA4C,EAAC;gBACjE,qBAAqB;gBACrB,MAAM,EAAE,MAAM;gBAEd,kCAAkC;gBAClC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oBACjB,KAAK,EAAE,KAAK;oBACZ,IAAI,EAAE,KAAK;oBACX,MAAM,EAAE,CAAC;iBACZ,CAAC;gBAEF,gCAAgC;gBAChC,OAAO,EAAE;oBACL,cAAc,EAAE,iCAAiC;iBACpD;aACJ,CAAC,CAAC;YACH,qBAAqB;YACrB,SAAS,CAAC,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,EAAE;gBAC5B,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;gBACrC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACxB,CAAC,CAAE,CAAC;YACJ,gCAAgC;YAChC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEjD,CAAC,CAAC;IA5CF,CAAC;IAID,KAAK,CAAC,IAAI;QACN,MAAM,SAAS,GAAG,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACxE,SAAS,CAAC,IAAI,CAAC,KAAK,EAAC,QAAQ,EAAC,EAAE;YAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACxB,CAAC,CAAC;aACG,KAAK,CAAC,KAAK,CAAC,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAA;IACV,CAAC;IA+BQ,MAAM;QACX,OAAO,IAAI,CAAA;;0CAEuB,IAAI,CAAC,OAAO;0CACZ,IAAI,CAAC,WAAW;;;KAGrD,CAAC;IACF,CAAC;CACJ,CAAA;AApEmB,oBAAM,GAAG,GAAG,CAAA;GAC5B,CAAA;AAGA;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;8CAMvB;AAVO,aAAa;IADzB,aAAa,CAAC,iBAAiB,CAAC;GACpB,aAAa,CAqEzB;SArEY,aAAa","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n\ninterface User {\n    completed: boolean;\n    id: number;\n    title: string;\n    userId: number;\n}\n\n@customElement('my-http-request')\nexport class MyHttpRequest extends LitElement {\n    static override styles = css`\n  `;\n\n    @property({type: Object})\n    usuario: User= {\n        completed: false,\n        id: 1,\n        title: \"\",\n        userId: 1\n    };\n\n    constructor() {\n        super();\n\n    }\n\n\n\n    async load() {\n        const myRequest = fetch('https://jsonplaceholder.typicode.com/todos/1');\n        myRequest.then(async response => {\n            console.log(response);\n            const miJson = await response.json();\n            console.log(miJson);\n        })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n    private clicked = () => {\n        this.load();\n    };\n    private clickedPost = () => {\n\n        const myRequest = fetch('https://jsonplaceholder.typicode.com/posts',{\n            // Adding method type\n            method: \"POST\",\n\n            // Adding body or contents to send\n            body: JSON.stringify({\n                title: \"foo\",\n                body: \"bar\",\n                userId: 1\n            }),\n\n            // Adding headers to the request\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        });\n        // Converting to JSON\n        myRequest.then(async response =>{\n            const resJson = await response.json()\n            console.log(resJson)\n        } );\n        // Displaying results to console\n        myRequest.catch(error => console.log(error));\n\n    };\n    override render() {\n        return html`\n      <h1>Mi Http Request</h1>\n      <p><button id=\"http-load\" @click=\"${this.clicked}\">Load Get</button></p>\n      <p><button id=\"http-load\" @click=\"${this.clickedPost}\">Load Post</button></p>\n \n      <slot></slot>\n    `;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'my-http-request': MyHttpRequest;\n    }\n}"]}