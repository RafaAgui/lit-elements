{"version":3,"file":"mi-formulario.js","sourceRoot":"","sources":["../../src/componentes/mi-formulario.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n import {LitElement, html, css} from 'lit';\n import {customElement, property, state} from 'lit/decorators.js';\n import {z} from 'zod';\n import {when} from \"lit/directives/when.js\";\n import {Person} from './person';\n \n @customElement('mi-formulario')\n export class MiFormulario extends LitElement {\n   static override styles = css`\n     :host {\n       display: block;\n       border: solid 1px gray;\n       padding: 16px;\n       max-width: 800px;\n     }\n   `;\n @property({type: Object})\n person: Person = new Person();\n\n mySchema = z.object({\n  name: z.string().min(3, { message: \"No puede estar vacÃ­o\" }),\n  mail: z.string().email({ message: \"tiene que ser un mail valido\" }),\n  age: z.number().gte(18, {message: \"Debe ser al menos 18\"})\n  });\n\n@state()\n  validation: any = {\n  success: true,\n    error: {\n    issues: [],\n    format : () => {}\n    }\n  };\n  \n@state()\n  myError = new z.ZodError([]);\n\n  onSubmit(e:Event){\n    e.preventDefault();\n    this.validation = this.mySchema.safeParse(this.person)\n    if (!this.validation.success){\n    console.log(\"no valida\")\n    }\n   }\n   \n   override render() {\n     return html`\n      <h1>Formulario desde LitElement</h1>\n        <form @submit=\"${this.onSubmit}\">\n          <div>\n            <label for=\"name\">Nombre</label>\n            <input id=\"name\" type=\"text\" name=\"name\" value=\"${this.person.name}\"\n              @input=${(e: Event) => {\n              const target = e.target as HTMLInputElement;\n              this.person.name = target.value;\n              console.log(this.person.name);\n              }\n            }/>\n            ${when(\n              !this.validation.success && this.validation.error.format().name!=undefined,\n              () => html`\n              <div class=\"input-error\" id=\"error-name\">\n                <span >${this.validation.error.format().name._errors}</span>\n              </div>\n              `,\n              () => html``)}\n            \n          </div>\n          <div>\n            <label for=\"mail\">E-Mail</label>\n            <input id=\"mail\" type=\"text\" name=\"mail\" value=\"${this.person.mail}\"\n              @input=${(e: Event) => {\n                const target = e.target as HTMLInputElement;\n                this.person.mail = target.value;\n                console.log(this.person.mail);\n                }\n              }/>\n              ${when(\n                !this.validation.success && this.validation.error.format().mail!=undefined,\n                () => html`\n                <div class=\"input-error\" id=\"error-age\">\n                  <span >${this.validation.error.format().mail._errors}</span>\n                </div>\n                `,\n                () => html``)}\n            \n          </div>\n          <div>\n            <label for=\"age\">Edad</label>\n            <input id=\"age\" type=\"number\" name=\"age\" value=\"${this.person.age}\"\n              @input=${(e: Event) => {\n                const target = e.target as HTMLInputElement;\n                this.person.age = +target.value;\n                console.log(this.person.age);\n                }\n              }/>\n              ${when(\n                !this.validation.success && this.validation.error.format().age!=undefined,\n                () => html`\n                <div class=\"input-error\" id=\"error-age\">\n                  <span >${this.validation.error.format().age._errors}</span>\n                </div>\n                `,\n                () => html``)}\n            \n          </div>\n          <div>\n            <input type=\"submit\" value=\"Enviar\">\n          </div>\n        </form>\n     `;\n   }\n }\n \n declare global {\n   interface HTMLElementTagNameMap {\n     'mi-formualrio': MiFormulario;\n   }\n }\n "]}